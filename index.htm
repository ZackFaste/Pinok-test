<!DOCTYPE html>
<html lang="uk">
<head>
   <meta charset="UTF-8">
   <title>–ü–Ü–ù–û–ö –ü–Ü–î –ó–ê–î</title>
   <style>
    body{
       font-family: sans-serif;
       background: #f2f2f2;
       margin: 0;
       padding: 20px;
    }

    header{
        background: #ff4b2b;
        color: white;
        padding: 20px;
        text-align: center;
        border-radius: 10px;
    }

    .post{
        background: white;
        border-radius: 8px;
        padding: 15px;
        margin-top: 15px;
        box-shadow: 0 2px 6px rgba(0,0,0,0.1);
    }

    .add-btn{
        display: inline-block;
        margin-top: 20px;
        background: #ff4b2b;
        color: white;
        padding: 10px 20px;
        text-decoration: none;
        border-radius: 5px;
        font-weight: bold;
    }

    .add-btn:hover{
        background: #e43f1a;
    }
    form {
  background: white;
  padding: 20px;
  border-radius: 10px;
  margin-top: 30px;
  box-shadow: 0 2px 6px rgba(0,0,0,0.1);
}

input, textarea {
  width: 100%;
  padding: 10px;
  font-size: 16px;
  border: 1px solid #ccc;
  border-radius: 5px;
  box-sizing: border-box;
}

    </style>
</head>
<body>

    <header>
        <h1>üî•–ü–Ü–ù–û–ö –ü–Ü–î –ó–ê–î</h1>
        <p>–†–µ–∞–ª—å–Ω—ñ –ø–æ—Ä–∞–¥–∏, —è–∫—ñ –≤—Ä—è—Ç—É—é—Ç—å —Ç–æ–±—ñ –Ω–µ—Ä–≤–∏üòÖ</p>
    <div id="auth-buttons" style="margin-top: 10px;">
        <button id="loginBtn" class="auth-btn">–£–≤—ñ–π—Ç–∏</button>
        <button id="registerBtn" class="auth-btn">–ó–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—å</button>
    </div>
    </header>
    <div id="filter">
  <button class="filter-btn" data-category="all">–í—Å—ñ</button>
  <button class="filter-btn" data-category="–ü–µ—Ä–µ—ó–∑–¥">–ü–µ—Ä–µ—ó–∑–¥</button>
  <button class="filter-btn" data-category="–†–æ–±–æ—Ç–∞">–†–æ–±–æ—Ç–∞</button>
  <button class="filter-btn" data-category="–ù–∞–≤—á–∞–Ω–Ω—è">–ù–∞–≤—á–∞–Ω–Ω—è</button>
  <button class="filter-btn" data-category="–ü–æ–±–∞—á–µ–Ω–Ω—è">–ü–æ–±–∞—á–µ–Ω–Ω—è</button>
  <button class="filter-btn" data-category="–í–∏–∂–∏–≤–∞–Ω–Ω—è">–í–∏–∂–∏–≤–∞–Ω–Ω—è</button>
</div>

    <div id="posts">
        <div class="post">
            <strong>üí°–ü–æ—Ä–∞–¥–∞ –≤—ñ–¥ –Ü—Ä–∏:</strong>
            <p>–Ø–∫—â–æ —â–æ–π–Ω–æ –∑–∞—ó—Ö–∞–≤ —É –∫–≤–∞—Ä—Ç–∏—Ä—É ‚Äî –ø–µ—Ä–µ–≤—ñ—Ä –ª—ñ—á–∏–ª—å–Ω–∏–∫–∏ —ñ —Å—Ñ–æ—Ç–∫–∞–π –≤—Å–µ. –Ü–Ω–∞–∫—à–µ –ø–ª–∞—Ç–∏—Ç–∏–º–µ—à –∑–∞ —Å—É—Å—ñ–¥—ñ–≤!</p>
        </div>
        <div class="post">
            <strong>üí°–ü–æ—Ä–∞–¥–∞ –≤—ñ–¥ –ú–∞–∫—Å–∞:</strong>
            <p>–ù–∞ –ø–µ—Ä—à—ñ–π —Ä–æ–±–æ—Ç—ñ –Ω—ñ–∫–æ–ª–∏ –Ω–µ –º–æ–≤—á–∏ ‚Äî —Å—Ç–∞–≤ –¥—É—Ä–Ω—ñ –ø–∏—Ç–∞–Ω–Ω—è. –¶–µ –Ω–µ —Ç—É–ø–æ, —Ü–µ –≤–∏–∂–∏–≤–∞–Ω–Ω—è üòé</p>
        </div>
    </div>

    <h2>üìù –ù–∞–ø–∏—à–∏ —Å–≤–æ—é –ø–æ—Ä–∞–¥—É</h2>
<<form id="adviceForm">
  <input type="text" id="author" placeholder="–¢–≤–æ—î —ñ–º‚Äô—è –∞–±–æ –Ω—ñ–∫" required>
  <br><br>
  
  <select id="category" required>
    <option value="" disabled selected>–û–±–µ—Ä—ñ—Ç—å –∫–∞—Ç–µ–≥–æ—Ä—ñ—é</option>
    <option value="–ü–µ—Ä–µ—ó–∑–¥">–ü–µ—Ä–µ—ó–∑–¥</option>
    <option value="–†–æ–±–æ—Ç–∞">–†–æ–±–æ—Ç–∞</option>
    <option value="–ù–∞–≤—á–∞–Ω–Ω—è">–ù–∞–≤—á–∞–Ω–Ω—è</option>
    <option value="–ü–æ–±–∞—á–µ–Ω–Ω—è">–ü–æ–±–∞—á–µ–Ω–Ω—è</option>
    <option value="–í–∏–∂–∏–≤–∞–Ω–Ω—è">–í–∏–∂–∏–≤–∞–Ω–Ω—è</option>
  </select>
  <br><br>

  <textarea id="adviceText" placeholder="–¢–≤–æ—è –ø–æ—Ä–∞–¥–∞..." rows="4" required></textarea>
  <br><br>
  <button type="submit" class="add-btn">‚ûï –î–æ–¥–∞—Ç–∏</button>
</form>

</form>

<script>
    const form = document.getElementById("adviceForm");
const posts = document.getElementById("posts");

// –§—É–Ω–∫—Ü—ñ—è –¥–ª—è –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –ø–æ—Ä–∞–¥–∏ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ
function addPost(author, advice, category) {
  const newPost = document.createElement("div");
  newPost.classList.add("post");
  newPost.innerHTML = `
    <strong>üí° –ü–æ—Ä–∞–¥–∞ –≤—ñ–¥ ${author} (${category}):</strong>
    <p>${advice}</p>
  `;
  posts.prepend(newPost);
}


// –ó—á–∏—Ç—É—î–º–æ –ø–æ—Ä–∞–¥–∏ –∑ localStorage –ø—Ä–∏ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—ñ —Å—Ç–æ—Ä—ñ–Ω–∫–∏
window.addEventListener("load", () => {
  const savedAdvices = JSON.parse(localStorage.getItem("advices")) || [];
  savedAdvices.forEach(item => {
    addPost(item.author, item.advice, item.category);
  });
});

form.addEventListener("submit", function(event) {
  event.preventDefault();

  const author = document.getElementById("author").value.trim();
  const advice = document.getElementById("adviceText").value.trim();
  const category = document.getElementById("category").value;

  if (author && advice && category) {
    addPost(author, advice, category);

    const savedAdvices = JSON.parse(localStorage.getItem("advices")) || [];
    savedAdvices.unshift({ author, advice, category });
    localStorage.setItem("advices", JSON.stringify(savedAdvices));

    form.reset();
    const filterButtons = document.querySelectorAll(".filter-btn");

filterButtons.forEach(button => {
  button.addEventListener("click", () => {
    // –ü—Ä–∏–±–∏—Ä–∞—î–º–æ –∫–ª–∞—Å active –∑ —É—Å—ñ—Ö –∫–Ω–æ–ø–æ–∫
    filterButtons.forEach(btn => btn.classList.remove("active"));
    // –î–æ–¥–∞—î–º–æ –∫–ª–∞—Å active –Ω–∞—Ç–∏—Å–Ω—É—Ç—ñ–π –∫–Ω–æ–ø—Ü—ñ
    button.classList.add("active");

    const category = button.getAttribute("data-category");
    filterPosts(category);
  });
});

function filterPosts(category) {
  const allPosts = document.querySelectorAll(".post");
  allPosts.forEach(post => {
    // –û—Ç—Ä–∏–º–∞—î–º–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –∑ —Ç–µ–∫—Å—Ç—É –ø–æ—Ä–∞–¥–∏, –≤–æ–Ω–∞ –≤ strong (–Ω–∞–ø—Ä–∏–∫–ª–∞–¥: üí° –ü–æ—Ä–∞–¥–∞ –≤—ñ–¥ –Ü—Ä–∞ (–í–∏–∂–∏–≤–∞–Ω–Ω—è): )
    const strong = post.querySelector("strong");
    const text = strong.textContent;
    
    // –í–∏—Ç—è–≥–∞—î–º–æ –∫–∞—Ç–µ–≥–æ—Ä—ñ—é –∑ –¥—É–∂–æ–∫
    const match = text.match(/\(([^)]+)\)/);
    const postCategory = match ? match[1] : "";

    if (category === "all" || postCategory === category) {
      post.style.display = "block";
    } else {
      post.style.display = "none";
    }
  });
}

// –ó–∞ –∑–∞–º–æ–≤—á—É–≤–∞–Ω–Ω—è–º –∞–∫—Ç–∏–≤—É—î–º–æ "–í—Å—ñ"
document.querySelector('.filter-btn[data-category="all"]').classList.add("active");

  }
});
const loginBtn = document.getElementById("loginBtn");
const registerBtn = document.getElementById("registerBtn");
const loginModal = document.getElementById("loginModal");
const registerModal = document.getElementById("registerModal");
const closeLogin = document.getElementById("closeLogin");
const closeRegister = document.getElementById("closeRegister");

// –í—ñ–¥–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª–æ–∫
loginBtn.addEventListener("click", () => {
  loginModal.style.display = "block";
});
registerBtn.addEventListener("click", () => {
  registerModal.style.display = "block";
});

// –ó–∞–∫—Ä–∏—Ç—Ç—è –º–æ–¥–∞–ª–æ–∫ –ø—Ä–∏ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—ñ —Ö
closeLogin.addEventListener("click", () => {
  loginModal.style.display = "none";
});
closeRegister.addEventListener("click", () => {
  registerModal.style.display = "none";
});

// –ó–∞–∫—Ä–∏—Ç—Ç—è –ø—Ä–∏ –∫–ª—ñ–∫—É –ø–æ–∑–∞ –º–æ–¥–∞–ª—å–Ω–∏–º –≤—ñ–∫–Ω–æ–º
window.addEventListener("click", (event) => {
  if (event.target === loginModal) loginModal.style.display = "none";
  if (event.target === registerModal) registerModal.style.display = "none";
});
document.getElementById("loginForm").addEventListener("submit", function(e) {
  e.preventDefault();
  alert("–£—Å–ø—ñ—à–Ω–∏–π –≤—Ö—ñ–¥! (–ü–æ–∫–∏ –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü—ñ—ó)");
  loginModal.style.display = "none";
  this.reset();
});

document.getElementById("registerForm").addEventListener("submit", function(e) {
  e.preventDefault();
  const pass = document.getElementById("registerPassword").value;
  const passConf = document.getElementById("registerPasswordConfirm").value;

  if (pass !== passConf) {
    alert("–ü–∞—Ä–æ–ª—ñ –Ω–µ —Å–ø—ñ–≤–ø–∞–¥–∞—é—Ç—å!");
    return;
  }
  alert("–£—Å–ø—ñ—à–Ω–∞ —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—è! (–ü–æ–∫–∏ –±–µ–∑ –∑–±–µ—Ä–µ–∂–µ–Ω–Ω—è)");
  registerModal.style.display = "none";
  this.reset();
});


</script>
<!-- –ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –¥–ª—è –ª–æ–≥—ñ–Ω—É -->
<div id="loginModal" class="modal">
  <div class="modal-content">
    <span class="close" id="closeLogin">&times;</span>
    <h2>–£–≤—ñ–π—Ç–∏</h2>
    <form id="loginForm">
      <input type="text" id="loginUsername" placeholder="–õ–æ–≥—ñ–Ω" required>
      <br><br>
      <input type="password" id="loginPassword" placeholder="–ü–∞—Ä–æ–ª—å" required>
      <br><br>
      <button type="submit" class="add-btn">–£–≤—ñ–π—Ç–∏</button>
    </form>
  </div>
</div>

<!-- –ú–æ–¥–∞–ª—å–Ω–µ –≤—ñ–∫–Ω–æ –¥–ª—è —Ä–µ—î—Å—Ç—Ä–∞—Ü—ñ—ó -->
<div id="registerModal" class="modal">
  <div class="modal-content">
    <span class="close" id="closeRegister">&times;</span>
    <h2>–ó–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—å</h2>
    <form id="registerForm">
      <input type="text" id="registerUsername" placeholder="–õ–æ–≥—ñ–Ω" required>
      <br><br>
      <input type="password" id="registerPassword" placeholder="–ü–∞—Ä–æ–ª—å" required>
      <br><br>
      <input type="password" id="registerPasswordConfirm" placeholder="–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è –ø–∞—Ä–æ–ª—é" required>
      <br><br>
      <button type="submit" class="add-btn">–ó–∞—Ä–µ—î—Å—Ç—Ä—É–≤–∞—Ç–∏—Å—å</button>
    </form>
  </div>
</div>

</body>
</html>